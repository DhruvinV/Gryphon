(source_file
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_typed type='Int'
          (pattern_named type='Int' 'x')
          (type_ident
            (component id='Int' bind=Swift.(file).Int)))
        (call_expr implicit type='Int' location=<<testFilePath>>:17:14 range=[<<testFilePath>>:17:14 - line:17:14] nothrow arg_labels=_builtinIntegerLiteral:
          (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:17:14 range=[<<testFilePath>>:17:14 - line:17:14] nothrow
            (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:17:14 range=[<<testFilePath>>:17:14 - line:17:14] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:17:14 range=[<<testFilePath>>:17:14 - line:17:14] typerepr='Int'))
          (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:17:14 range=[<<testFilePath>>:17:14 - line:17:14] names=_builtinIntegerLiteral
            (integer_literal_expr type='Int2048' location=<<testFilePath>>:17:14 range=[<<testFilePath>>:17:14 - line:17:14] value=0))))
))
  (var_decl "x" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'y')
        (load_expr implicit type='Int' location=<<testFilePath>>:18:9 range=[<<testFilePath>>:18:9 - line:18:9]
          (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:18:9 range=[<<testFilePath>>:18:9 - line:18:9] decl=assignments.(file).x@<<testFilePath>>:17:5 direct_to_storage function_ref=unapplied)))
))
  (var_decl "y" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'z')
        (call_expr implicit type='Int' location=<<testFilePath>>:19:9 range=[<<testFilePath>>:19:9 - line:19:9] nothrow arg_labels=_builtinIntegerLiteral:
          (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:19:9 range=[<<testFilePath>>:19:9 - line:19:9] nothrow
            (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:19:9 range=[<<testFilePath>>:19:9 - line:19:9] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:19:9 range=[<<testFilePath>>:19:9 - line:19:9] typerepr='Int'))
          (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:19:9 range=[<<testFilePath>>:19:9 - line:19:9] names=_builtinIntegerLiteral
            (integer_literal_expr type='Int2048' location=<<testFilePath>>:19:9 range=[<<testFilePath>>:19:9 - line:19:9] value=10))))
))
  (var_decl "z" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (assign_expr
        (declref_expr type='@lvalue Int' accessKind=write location=<<testFilePath>>:20:1 range=[<<testFilePath>>:20:1 - line:20:1] decl=assignments.(file).z@<<testFilePath>>:19:5 direct_to_storage function_ref=unapplied)
        (load_expr implicit type='Int' location=<<testFilePath>>:20:5 range=[<<testFilePath>>:20:5 - line:20:5]
          (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:20:5 range=[<<testFilePath>>:20:5 - line:20:5] decl=assignments.(file).x@<<testFilePath>>:17:5 direct_to_storage function_ref=unapplied)))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:22:1 range=[<<testFilePath>>:22:1 - line:22:13] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:22:1 range=[<<testFilePath>>:22:1 - line:22:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:6 - line:22:13] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:6 - line:22:13]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:7 - line:22:7]
              (interpolated_string_literal_expr type='String' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:7 - line:22:7]
                (string_literal_expr type='String' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:7 - line:22:7] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                (paren_expr type='(@lvalue Int)' accessKind=read location=<<testFilePath>>:22:10 range=[<<testFilePath>>:22:9 - line:22:11]
                  (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:22:10 range=[<<testFilePath>>:22:10 - line:22:10] decl=assignments.(file).x@<<testFilePath>>:17:5 direct_to_storage function_ref=unapplied))
                (string_literal_expr type='String' location=<<testFilePath>>:22:12 range=[<<testFilePath>>:22:12 - line:22:12] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:23:1 range=[<<testFilePath>>:23:1 - line:23:13] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:23:1 range=[<<testFilePath>>:23:1 - line:23:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:23:7 range=[<<testFilePath>>:23:6 - line:23:13] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:23:7 range=[<<testFilePath>>:23:6 - line:23:13]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:23:7 range=[<<testFilePath>>:23:7 - line:23:7]
              (interpolated_string_literal_expr type='String' location=<<testFilePath>>:23:7 range=[<<testFilePath>>:23:7 - line:23:7]
                (string_literal_expr type='String' location=<<testFilePath>>:23:7 range=[<<testFilePath>>:23:7 - line:23:7] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                (paren_expr type='(@lvalue Int)' accessKind=read location=<<testFilePath>>:23:10 range=[<<testFilePath>>:23:9 - line:23:11]
                  (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:23:10 range=[<<testFilePath>>:23:10 - line:23:10] decl=assignments.(file).y@<<testFilePath>>:18:5 direct_to_storage function_ref=unapplied))
                (string_literal_expr type='String' location=<<testFilePath>>:23:12 range=[<<testFilePath>>:23:12 - line:23:12] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:24:1 range=[<<testFilePath>>:24:1 - line:24:13] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:24:1 range=[<<testFilePath>>:24:1 - line:24:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:6 - line:24:13] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:6 - line:24:13]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:7 - line:24:7]
              (interpolated_string_literal_expr type='String' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:7 - line:24:7]
                (string_literal_expr type='String' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:7 - line:24:7] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                (paren_expr type='(@lvalue Int)' accessKind=read location=<<testFilePath>>:24:10 range=[<<testFilePath>>:24:9 - line:24:11]
                  (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:24:10 range=[<<testFilePath>>:24:10 - line:24:10] decl=assignments.(file).z@<<testFilePath>>:19:5 direct_to_storage function_ref=unapplied))
                (string_literal_expr type='String' location=<<testFilePath>>:24:12 range=[<<testFilePath>>:24:12 - line:24:12] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**))))))))
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_typed type='Int?'
          (pattern_named type='Int?' 'a')
)
        (call_expr implicit type='Int?' location=<<testFilePath>>:27:15 range=[<<testFilePath>>:27:15 - line:27:15] nothrow arg_labels=nilLiteral:
          (constructor_ref_call_expr implicit type='(()) -> Int?' location=<<testFilePath>>:27:15 range=[<<testFilePath>>:27:15 - line:27:15] nothrow
            (declref_expr implicit type='(Optional<Int>.Type) -> (()) -> Optional<Int>' location=<<testFilePath>>:27:15 range=[<<testFilePath>>:27:15 - line:27:15] decl=Swift.(file).Optional.init(nilLiteral:) [with Int] function_ref=single)
            (type_expr implicit type='Int?.Type' location=<<testFilePath>>:27:15 range=[<<testFilePath>>:27:15 - line:27:15] typerepr='Int?'))
          (tuple_expr implicit type='(nilLiteral: ())' location=<<testFilePath>>:27:15 range=[<<testFilePath>>:27:15 - line:27:15] names=nilLiteral
            (tuple_expr type='()' location=<<testFilePath>>:27:15 range=[<<testFilePath>>:27:15 - line:27:15]))))
))
  (var_decl "a" type='Int?' interface type='Int?' access=internal let storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:29:1 range=[<<testFilePath>>:29:1 - line:29:13] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:29:1 range=[<<testFilePath>>:29:1 - line:29:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:29:7 range=[<<testFilePath>>:29:6 - line:29:13] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:29:7 range=[<<testFilePath>>:29:6 - line:29:13]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:29:7 range=[<<testFilePath>>:29:7 - line:29:7]
              (interpolated_string_literal_expr type='String' location=<<testFilePath>>:29:7 range=[<<testFilePath>>:29:7 - line:29:7]
                (string_literal_expr type='String' location=<<testFilePath>>:29:7 range=[<<testFilePath>>:29:7 - line:29:7] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)
                (paren_expr type='(Int?)' location=<<testFilePath>>:29:10 range=[<<testFilePath>>:29:9 - line:29:11]
                  (declref_expr type='Int?' location=<<testFilePath>>:29:10 range=[<<testFilePath>>:29:10 - line:29:10] decl=assignments.(file).a@<<testFilePath>>:27:5 direct_to_storage function_ref=unapplied))
                (string_literal_expr type='String' location=<<testFilePath>>:29:12 range=[<<testFilePath>>:29:12 - line:29:12] encoding=utf8 value="" builtin_initializer=Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:) initializer=**NULL**)))))))))
