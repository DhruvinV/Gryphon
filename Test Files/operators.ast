(source_file
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'x')
        (call_expr implicit type='Int' location=<<testFilePath>>:1:9 range=[<<testFilePath>>:1:9 - line:1:9] nothrow arg_labels=_builtinIntegerLiteral:
          (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:1:9 range=[<<testFilePath>>:1:9 - line:1:9] nothrow
            (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:1:9 range=[<<testFilePath>>:1:9 - line:1:9] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:1:9 range=[<<testFilePath>>:1:9 - line:1:9] typerepr='Int'))
          (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:1:9 range=[<<testFilePath>>:1:9 - line:1:9] names=_builtinIntegerLiteral
            (integer_literal_expr type='Int2048' location=<<testFilePath>>:1:9 range=[<<testFilePath>>:1:9 - line:1:9] value=0))))
))
  (var_decl "x" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'y')
        (binary_expr type='Int' location=<<testFilePath>>:2:11 range=[<<testFilePath>>:2:9 - line:2:13] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:2:11 range=[<<testFilePath>>:2:11 - line:2:11] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:2:11 range=[<<testFilePath>>:2:11 - line:2:11] decl=Swift.(file).Int.+ function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:2:11 range=[<<testFilePath>>:2:11 - line:2:11] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:2:9 range=[<<testFilePath>>:2:9 - line:2:13]
            (load_expr implicit type='Int' location=<<testFilePath>>:2:9 range=[<<testFilePath>>:2:9 - line:2:9]
              (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:2:9 range=[<<testFilePath>>:2:9 - line:2:9] decl=operators.(file).x@<<testFilePath>>:1:5 direct_to_storage function_ref=unapplied))
            (call_expr implicit type='Int' location=<<testFilePath>>:2:13 range=[<<testFilePath>>:2:13 - line:2:13] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:2:13 range=[<<testFilePath>>:2:13 - line:2:13] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:2:13 range=[<<testFilePath>>:2:13 - line:2:13] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:2:13 range=[<<testFilePath>>:2:13 - line:2:13] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:2:13 range=[<<testFilePath>>:2:13 - line:2:13] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:2:13 range=[<<testFilePath>>:2:13 - line:2:13] value=1))))))
))
  (var_decl "y" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'z')
        (binary_expr type='Int' location=<<testFilePath>>:3:11 range=[<<testFilePath>>:3:9 - line:3:13] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:3:11 range=[<<testFilePath>>:3:11 - line:3:11] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:3:11 range=[<<testFilePath>>:3:11 - line:3:11] decl=Swift.(file).Int.+ function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:3:11 range=[<<testFilePath>>:3:11 - line:3:11] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:3:9 range=[<<testFilePath>>:3:9 - line:3:13]
            (call_expr implicit type='Int' location=<<testFilePath>>:3:9 range=[<<testFilePath>>:3:9 - line:3:9] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:3:9 range=[<<testFilePath>>:3:9 - line:3:9] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:3:9 range=[<<testFilePath>>:3:9 - line:3:9] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:3:9 range=[<<testFilePath>>:3:9 - line:3:9] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:3:9 range=[<<testFilePath>>:3:9 - line:3:9] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:3:9 range=[<<testFilePath>>:3:9 - line:3:9] value=2)))
            (call_expr implicit type='Int' location=<<testFilePath>>:3:13 range=[<<testFilePath>>:3:13 - line:3:13] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:3:13 range=[<<testFilePath>>:3:13 - line:3:13] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:3:13 range=[<<testFilePath>>:3:13 - line:3:13] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:3:13 range=[<<testFilePath>>:3:13 - line:3:13] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:3:13 range=[<<testFilePath>>:3:13 - line:3:13] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:3:13 range=[<<testFilePath>>:3:13 - line:3:13] value=3))))))
))
  (var_decl "z" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'multiplication')
        (binary_expr type='Int' location=<<testFilePath>>:5:24 range=[<<testFilePath>>:5:22 - line:5:26] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:5:24 range=[<<testFilePath>>:5:24 - line:5:24] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:5:24 range=[<<testFilePath>>:5:24 - line:5:24] decl=Swift.(file).Int.* function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:5:24 range=[<<testFilePath>>:5:24 - line:5:24] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:5:22 range=[<<testFilePath>>:5:22 - line:5:26]
            (call_expr implicit type='Int' location=<<testFilePath>>:5:22 range=[<<testFilePath>>:5:22 - line:5:22] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:5:22 range=[<<testFilePath>>:5:22 - line:5:22] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:5:22 range=[<<testFilePath>>:5:22 - line:5:22] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:5:22 range=[<<testFilePath>>:5:22 - line:5:22] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:5:22 range=[<<testFilePath>>:5:22 - line:5:22] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:5:22 range=[<<testFilePath>>:5:22 - line:5:22] value=0)))
            (call_expr implicit type='Int' location=<<testFilePath>>:5:26 range=[<<testFilePath>>:5:26 - line:5:26] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:5:26 range=[<<testFilePath>>:5:26 - line:5:26] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:5:26 range=[<<testFilePath>>:5:26 - line:5:26] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:5:26 range=[<<testFilePath>>:5:26 - line:5:26] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:5:26 range=[<<testFilePath>>:5:26 - line:5:26] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:5:26 range=[<<testFilePath>>:5:26 - line:5:26] value=1))))))
))
  (var_decl "multiplication" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'division')
        (binary_expr type='Int' location=<<testFilePath>>:6:19 range=[<<testFilePath>>:6:16 - line:6:21] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:6:19 range=[<<testFilePath>>:6:19 - line:6:19] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:6:19 range=[<<testFilePath>>:6:19 - line:6:19] decl=Swift.(file).Int./ function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:6:19 range=[<<testFilePath>>:6:19 - line:6:19] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:6:16 range=[<<testFilePath>>:6:16 - line:6:21]
            (call_expr implicit type='Int' location=<<testFilePath>>:6:16 range=[<<testFilePath>>:6:16 - line:6:16] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:6:16 range=[<<testFilePath>>:6:16 - line:6:16] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:6:16 range=[<<testFilePath>>:6:16 - line:6:16] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:6:16 range=[<<testFilePath>>:6:16 - line:6:16] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:6:16 range=[<<testFilePath>>:6:16 - line:6:16] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:6:16 range=[<<testFilePath>>:6:16 - line:6:16] value=10)))
            (call_expr implicit type='Int' location=<<testFilePath>>:6:21 range=[<<testFilePath>>:6:21 - line:6:21] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:6:21 range=[<<testFilePath>>:6:21 - line:6:21] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:6:21 range=[<<testFilePath>>:6:21 - line:6:21] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:6:21 range=[<<testFilePath>>:6:21 - line:6:21] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:6:21 range=[<<testFilePath>>:6:21 - line:6:21] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:6:21 range=[<<testFilePath>>:6:21 - line:6:21] value=2))))))
))
  (var_decl "division" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'subtraction')
        (binary_expr type='Int' location=<<testFilePath>>:7:21 range=[<<testFilePath>>:7:19 - line:7:23] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:7:21 range=[<<testFilePath>>:7:21 - line:7:21] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:7:21 range=[<<testFilePath>>:7:21 - line:7:21] decl=Swift.(file).Int.- function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:7:21 range=[<<testFilePath>>:7:21 - line:7:21] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:7:19 range=[<<testFilePath>>:7:19 - line:7:23]
            (call_expr implicit type='Int' location=<<testFilePath>>:7:19 range=[<<testFilePath>>:7:19 - line:7:19] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:7:19 range=[<<testFilePath>>:7:19 - line:7:19] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:7:19 range=[<<testFilePath>>:7:19 - line:7:19] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:7:19 range=[<<testFilePath>>:7:19 - line:7:19] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:7:19 range=[<<testFilePath>>:7:19 - line:7:19] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:7:19 range=[<<testFilePath>>:7:19 - line:7:19] value=3)))
            (call_expr implicit type='Int' location=<<testFilePath>>:7:23 range=[<<testFilePath>>:7:23 - line:7:23] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:7:23 range=[<<testFilePath>>:7:23 - line:7:23] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:7:23 range=[<<testFilePath>>:7:23 - line:7:23] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:7:23 range=[<<testFilePath>>:7:23 - line:7:23] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:7:23 range=[<<testFilePath>>:7:23 - line:7:23] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:7:23 range=[<<testFilePath>>:7:23 - line:7:23] value=1))))))
))
  (var_decl "subtraction" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'sum')
        (binary_expr type='Int' location=<<testFilePath>>:8:13 range=[<<testFilePath>>:8:11 - line:8:15] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:8:13 range=[<<testFilePath>>:8:13 - line:8:13] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:8:13 range=[<<testFilePath>>:8:13 - line:8:13] decl=Swift.(file).Int.+ function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:8:13 range=[<<testFilePath>>:8:13 - line:8:13] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:8:11 range=[<<testFilePath>>:8:11 - line:8:15]
            (call_expr implicit type='Int' location=<<testFilePath>>:8:11 range=[<<testFilePath>>:8:11 - line:8:11] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:8:11 range=[<<testFilePath>>:8:11 - line:8:11] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:8:11 range=[<<testFilePath>>:8:11 - line:8:11] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:8:11 range=[<<testFilePath>>:8:11 - line:8:11] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:8:11 range=[<<testFilePath>>:8:11 - line:8:11] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:8:11 range=[<<testFilePath>>:8:11 - line:8:11] value=4)))
            (call_expr implicit type='Int' location=<<testFilePath>>:8:15 range=[<<testFilePath>>:8:15 - line:8:15] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:8:15 range=[<<testFilePath>>:8:15 - line:8:15] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:8:15 range=[<<testFilePath>>:8:15 - line:8:15] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:8:15 range=[<<testFilePath>>:8:15 - line:8:15] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:8:15 range=[<<testFilePath>>:8:15 - line:8:15] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:8:15 range=[<<testFilePath>>:8:15 - line:8:15] value=1))))))
))
  (var_decl "sum" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'multiplication2')
        (binary_expr type='Int' location=<<testFilePath>>:10:24 range=[<<testFilePath>>:10:23 - line:10:25] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:10:24 range=[<<testFilePath>>:10:24 - line:10:24] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:10:24 range=[<<testFilePath>>:10:24 - line:10:24] decl=Swift.(file).Int.* function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:10:24 range=[<<testFilePath>>:10:24 - line:10:24] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:10:23 range=[<<testFilePath>>:10:23 - line:10:25]
            (call_expr implicit type='Int' location=<<testFilePath>>:10:23 range=[<<testFilePath>>:10:23 - line:10:23] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:10:23 range=[<<testFilePath>>:10:23 - line:10:23] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:10:23 range=[<<testFilePath>>:10:23 - line:10:23] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:10:23 range=[<<testFilePath>>:10:23 - line:10:23] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:10:23 range=[<<testFilePath>>:10:23 - line:10:23] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:10:23 range=[<<testFilePath>>:10:23 - line:10:23] value=0)))
            (call_expr implicit type='Int' location=<<testFilePath>>:10:25 range=[<<testFilePath>>:10:25 - line:10:25] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:10:25 range=[<<testFilePath>>:10:25 - line:10:25] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:10:25 range=[<<testFilePath>>:10:25 - line:10:25] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:10:25 range=[<<testFilePath>>:10:25 - line:10:25] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:10:25 range=[<<testFilePath>>:10:25 - line:10:25] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:10:25 range=[<<testFilePath>>:10:25 - line:10:25] value=1))))))
))
  (var_decl "multiplication2" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'division2')
        (binary_expr type='Int' location=<<testFilePath>>:11:19 range=[<<testFilePath>>:11:17 - line:11:20] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:11:19 range=[<<testFilePath>>:11:19 - line:11:19] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:11:19 range=[<<testFilePath>>:11:19 - line:11:19] decl=Swift.(file).Int./ function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:11:19 range=[<<testFilePath>>:11:19 - line:11:19] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:11:17 range=[<<testFilePath>>:11:17 - line:11:20]
            (call_expr implicit type='Int' location=<<testFilePath>>:11:17 range=[<<testFilePath>>:11:17 - line:11:17] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:11:17 range=[<<testFilePath>>:11:17 - line:11:17] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:11:17 range=[<<testFilePath>>:11:17 - line:11:17] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:11:17 range=[<<testFilePath>>:11:17 - line:11:17] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:11:17 range=[<<testFilePath>>:11:17 - line:11:17] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:11:17 range=[<<testFilePath>>:11:17 - line:11:17] value=10)))
            (call_expr implicit type='Int' location=<<testFilePath>>:11:20 range=[<<testFilePath>>:11:20 - line:11:20] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:11:20 range=[<<testFilePath>>:11:20 - line:11:20] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:11:20 range=[<<testFilePath>>:11:20 - line:11:20] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:11:20 range=[<<testFilePath>>:11:20 - line:11:20] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:11:20 range=[<<testFilePath>>:11:20 - line:11:20] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:11:20 range=[<<testFilePath>>:11:20 - line:11:20] value=2))))))
))
  (var_decl "division2" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'subtraction2')
        (binary_expr type='Int' location=<<testFilePath>>:12:21 range=[<<testFilePath>>:12:20 - line:12:22] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:12:21 range=[<<testFilePath>>:12:21 - line:12:21] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:12:21 range=[<<testFilePath>>:12:21 - line:12:21] decl=Swift.(file).Int.- function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:12:21 range=[<<testFilePath>>:12:21 - line:12:21] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:12:20 range=[<<testFilePath>>:12:20 - line:12:22]
            (call_expr implicit type='Int' location=<<testFilePath>>:12:20 range=[<<testFilePath>>:12:20 - line:12:20] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:12:20 range=[<<testFilePath>>:12:20 - line:12:20] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:12:20 range=[<<testFilePath>>:12:20 - line:12:20] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:12:20 range=[<<testFilePath>>:12:20 - line:12:20] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:12:20 range=[<<testFilePath>>:12:20 - line:12:20] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:12:20 range=[<<testFilePath>>:12:20 - line:12:20] value=3)))
            (call_expr implicit type='Int' location=<<testFilePath>>:12:22 range=[<<testFilePath>>:12:22 - line:12:22] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:12:22 range=[<<testFilePath>>:12:22 - line:12:22] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:12:22 range=[<<testFilePath>>:12:22 - line:12:22] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:12:22 range=[<<testFilePath>>:12:22 - line:12:22] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:12:22 range=[<<testFilePath>>:12:22 - line:12:22] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:12:22 range=[<<testFilePath>>:12:22 - line:12:22] value=1))))))
))
  (var_decl "subtraction2" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_named type='Int' 'sum2')
        (binary_expr type='Int' location=<<testFilePath>>:13:13 range=[<<testFilePath>>:13:12 - line:13:14] nothrow
          (dot_syntax_call_expr implicit type='(Int, Int) -> Int' location=<<testFilePath>>:13:13 range=[<<testFilePath>>:13:13 - line:13:13] nothrow
            (declref_expr type='(Int.Type) -> (Int, Int) -> Int' location=<<testFilePath>>:13:13 range=[<<testFilePath>>:13:13 - line:13:13] decl=Swift.(file).Int.+ function_ref=unapplied)
            (type_expr implicit type='Int.Type' location=<<testFilePath>>:13:13 range=[<<testFilePath>>:13:13 - line:13:13] typerepr='Int'))
          (tuple_expr implicit type='(Int, Int)' location=<<testFilePath>>:13:12 range=[<<testFilePath>>:13:12 - line:13:14]
            (call_expr implicit type='Int' location=<<testFilePath>>:13:12 range=[<<testFilePath>>:13:12 - line:13:12] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:13:12 range=[<<testFilePath>>:13:12 - line:13:12] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:13:12 range=[<<testFilePath>>:13:12 - line:13:12] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:13:12 range=[<<testFilePath>>:13:12 - line:13:12] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:13:12 range=[<<testFilePath>>:13:12 - line:13:12] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:13:12 range=[<<testFilePath>>:13:12 - line:13:12] value=4)))
            (call_expr implicit type='Int' location=<<testFilePath>>:13:14 range=[<<testFilePath>>:13:14 - line:13:14] nothrow arg_labels=_builtinIntegerLiteral:
              (constructor_ref_call_expr implicit type='(_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:13:14 range=[<<testFilePath>>:13:14 - line:13:14] nothrow
                (declref_expr implicit type='(Int.Type) -> (_MaxBuiltinIntegerType) -> Int' location=<<testFilePath>>:13:14 range=[<<testFilePath>>:13:14 - line:13:14] decl=Swift.(file).Int.init(_builtinIntegerLiteral:) function_ref=single)
                (type_expr implicit type='Int.Type' location=<<testFilePath>>:13:14 range=[<<testFilePath>>:13:14 - line:13:14] typerepr='Int'))
              (tuple_expr implicit type='(_builtinIntegerLiteral: Int2048)' location=<<testFilePath>>:13:14 range=[<<testFilePath>>:13:14 - line:13:14] names=_builtinIntegerLiteral
                (integer_literal_expr type='Int2048' location=<<testFilePath>>:13:14 range=[<<testFilePath>>:13:14 - line:13:14] value=1))))))
))
  (var_decl "sum2" type='Int' interface type='Int' access=internal storage_kind=stored)
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:15:1 range=[<<testFilePath>>:15:1 - line:15:8] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:15:1 range=[<<testFilePath>>:15:1 - line:15:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:15:7 range=[<<testFilePath>>:15:6 - line:15:8] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:15:7 range=[<<testFilePath>>:15:6 - line:15:8]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:15:7 range=[<<testFilePath>>:15:7 - line:15:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:15:7 range=[<<testFilePath>>:15:7 - line:15:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:15:7 range=[<<testFilePath>>:15:7 - line:15:7] decl=operators.(file).x@<<testFilePath>>:1:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:16:1 range=[<<testFilePath>>:16:1 - line:16:8] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:16:1 range=[<<testFilePath>>:16:1 - line:16:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:16:7 range=[<<testFilePath>>:16:6 - line:16:8] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:16:7 range=[<<testFilePath>>:16:6 - line:16:8]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:16:7 range=[<<testFilePath>>:16:7 - line:16:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:16:7 range=[<<testFilePath>>:16:7 - line:16:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:16:7 range=[<<testFilePath>>:16:7 - line:16:7] decl=operators.(file).y@<<testFilePath>>:2:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:17:1 range=[<<testFilePath>>:17:1 - line:17:8] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:17:1 range=[<<testFilePath>>:17:1 - line:17:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:17:7 range=[<<testFilePath>>:17:6 - line:17:8] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:17:7 range=[<<testFilePath>>:17:6 - line:17:8]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:17:7 range=[<<testFilePath>>:17:7 - line:17:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:17:7 range=[<<testFilePath>>:17:7 - line:17:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:17:7 range=[<<testFilePath>>:17:7 - line:17:7] decl=operators.(file).z@<<testFilePath>>:3:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:19:1 range=[<<testFilePath>>:19:1 - line:19:21] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:19:1 range=[<<testFilePath>>:19:1 - line:19:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:19:7 range=[<<testFilePath>>:19:6 - line:19:21] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:19:7 range=[<<testFilePath>>:19:6 - line:19:21]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:19:7 range=[<<testFilePath>>:19:7 - line:19:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:19:7 range=[<<testFilePath>>:19:7 - line:19:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:19:7 range=[<<testFilePath>>:19:7 - line:19:7] decl=operators.(file).multiplication@<<testFilePath>>:5:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:20:1 range=[<<testFilePath>>:20:1 - line:20:15] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:20:1 range=[<<testFilePath>>:20:1 - line:20:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:20:7 range=[<<testFilePath>>:20:6 - line:20:15] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:20:7 range=[<<testFilePath>>:20:6 - line:20:15]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:20:7 range=[<<testFilePath>>:20:7 - line:20:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:20:7 range=[<<testFilePath>>:20:7 - line:20:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:20:7 range=[<<testFilePath>>:20:7 - line:20:7] decl=operators.(file).division@<<testFilePath>>:6:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:21:1 range=[<<testFilePath>>:21:1 - line:21:18] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:21:1 range=[<<testFilePath>>:21:1 - line:21:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:21:7 range=[<<testFilePath>>:21:6 - line:21:18] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:21:7 range=[<<testFilePath>>:21:6 - line:21:18]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:21:7 range=[<<testFilePath>>:21:7 - line:21:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:21:7 range=[<<testFilePath>>:21:7 - line:21:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:21:7 range=[<<testFilePath>>:21:7 - line:21:7] decl=operators.(file).subtraction@<<testFilePath>>:7:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:22:1 range=[<<testFilePath>>:22:1 - line:22:10] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:22:1 range=[<<testFilePath>>:22:1 - line:22:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:6 - line:22:10] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:6 - line:22:10]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:7 - line:22:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:7 - line:22:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:22:7 range=[<<testFilePath>>:22:7 - line:22:7] decl=operators.(file).sum@<<testFilePath>>:8:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:24:1 range=[<<testFilePath>>:24:1 - line:24:22] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:24:1 range=[<<testFilePath>>:24:1 - line:24:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:6 - line:24:22] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:6 - line:24:22]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:7 - line:24:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:7 - line:24:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:24:7 range=[<<testFilePath>>:24:7 - line:24:7] decl=operators.(file).multiplication2@<<testFilePath>>:10:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:25:1 range=[<<testFilePath>>:25:1 - line:25:16] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:25:1 range=[<<testFilePath>>:25:1 - line:25:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:25:7 range=[<<testFilePath>>:25:6 - line:25:16] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:25:7 range=[<<testFilePath>>:25:6 - line:25:16]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:25:7 range=[<<testFilePath>>:25:7 - line:25:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:25:7 range=[<<testFilePath>>:25:7 - line:25:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:25:7 range=[<<testFilePath>>:25:7 - line:25:7] decl=operators.(file).division2@<<testFilePath>>:11:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:26:1 range=[<<testFilePath>>:26:1 - line:26:19] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:26:1 range=[<<testFilePath>>:26:1 - line:26:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:26:7 range=[<<testFilePath>>:26:6 - line:26:19] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:26:7 range=[<<testFilePath>>:26:6 - line:26:19]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:26:7 range=[<<testFilePath>>:26:7 - line:26:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:26:7 range=[<<testFilePath>>:26:7 - line:26:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:26:7 range=[<<testFilePath>>:26:7 - line:26:7] decl=operators.(file).subtraction2@<<testFilePath>>:12:5 direct_to_storage function_ref=unapplied))))))))
  (top_level_code_decl
    (brace_stmt
      (call_expr type='()' location=<<testFilePath>>:27:1 range=[<<testFilePath>>:27:1 - line:27:11] nothrow arg_labels=_:
        (declref_expr type='(Any..., String, String) -> ()' location=<<testFilePath>>:27:1 range=[<<testFilePath>>:27:1 - line:27:1] decl=Swift.(file).print(_:separator:terminator:) function_ref=single)
        (tuple_shuffle_expr implicit type='(Any..., separator: String, terminator: String)' location=<<testFilePath>>:27:7 range=[<<testFilePath>>:27:6 - line:27:11] scalar_to_tuple elements=[-2, -1, -1] variadic_sources=[0] default_args_owner=Swift.(file).print(_:separator:terminator:)
          (paren_expr type='Any' location=<<testFilePath>>:27:7 range=[<<testFilePath>>:27:6 - line:27:11]
            (erasure_expr implicit type='Any' location=<<testFilePath>>:27:7 range=[<<testFilePath>>:27:7 - line:27:7]
              (load_expr implicit type='Int' location=<<testFilePath>>:27:7 range=[<<testFilePath>>:27:7 - line:27:7]
                (declref_expr type='@lvalue Int' accessKind=read location=<<testFilePath>>:27:7 range=[<<testFilePath>>:27:7 - line:27:7] decl=operators.(file).sum2@<<testFilePath>>:13:5 direct_to_storage function_ref=unapplied)))))))))
