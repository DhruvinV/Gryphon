{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:1:4 - line:1:4","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:1:4"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:1:4 - line:1:4","decl":"Swift.(file).Bool.init(_builtinBooleanLiteral:)","function_ref":"single","type":"(Bool.Type) -> (Int1) -> Bool","location":"<<testFilePath>>:1:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:1:4 - line:1:4","type":"Bool.Type","location":"<<testFilePath>>:1:4","typerepr":"Bool"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int1) -> Bool","range":"<<testFilePath>>:1:4 - line:1:4","location":"<<testFilePath>>:1:4"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Boolean Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:1:4 - line:1:4","value":"true","type":"Builtin.Int1","location":"<<testFilePath>>:1:4"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:1:4 - line:1:4","names":"_builtinBooleanLiteral","type":"(_builtinBooleanLiteral: Builtin.Int1)","location":"<<testFilePath>>:1:4"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinBooleanLiteral:","range":"<<testFilePath>>:1:4 - line:1:4","type":"Bool","location":"<<testFilePath>>:1:4"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:1:4 - line:1:4","location":"<<testFilePath>>:1:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:1:4 - line:1:4","type":"Int1","location":"<<testFilePath>>:1:4"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:2:2 - line:2:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:2:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:2:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:2:8 - line:2:8","value":"Hi!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:2:8 - line:2:8","location":"<<testFilePath>>:2:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:2:7 - line:2:13","location":"<<testFilePath>>:2:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:2:7 - line:2:13","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:2:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:2:2 - line:2:13","type":"()","location":"<<testFilePath>>:2:2"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:5:4 - line:5:4","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:5:4"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:5:4 - line:5:4","decl":"Swift.(file).Bool.init(_builtinBooleanLiteral:)","function_ref":"single","type":"(Bool.Type) -> (Int1) -> Bool","location":"<<testFilePath>>:5:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:5:4 - line:5:4","type":"Bool.Type","location":"<<testFilePath>>:5:4","typerepr":"Bool"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int1) -> Bool","range":"<<testFilePath>>:5:4 - line:5:4","location":"<<testFilePath>>:5:4"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Boolean Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:5:4 - line:5:4","value":"false","type":"Builtin.Int1","location":"<<testFilePath>>:5:4"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:5:4 - line:5:4","names":"_builtinBooleanLiteral","type":"(_builtinBooleanLiteral: Builtin.Int1)","location":"<<testFilePath>>:5:4"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinBooleanLiteral:","range":"<<testFilePath>>:5:4 - line:5:4","type":"Bool","location":"<<testFilePath>>:5:4"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:5:4 - line:5:4","location":"<<testFilePath>>:5:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:5:4 - line:5:4","type":"Int1","location":"<<testFilePath>>:5:4"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:6:2 - line:6:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:6:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:6:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:6:8 - line:6:8","value":"Bye!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:6:8 - line:6:8","location":"<<testFilePath>>:6:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:6:7 - line:6:14","location":"<<testFilePath>>:6:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:6:7 - line:6:14","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:6:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:6:2 - line:6:14","type":"()","location":"<<testFilePath>>:6:2"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}}],"name":"Source File","keyValueAttributes":{}}