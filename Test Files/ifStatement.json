{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:2:4 - line:2:4","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:2:4"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:2:4 - line:2:4","decl":"Swift.(file).Bool.init(_builtinBooleanLiteral:)","function_ref":"single","type":"(Bool.Type) -> (Int1) -> Bool","location":"<<testFilePath>>:2:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:2:4 - line:2:4","type":"Bool.Type","location":"<<testFilePath>>:2:4","typerepr":"Bool"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int1) -> Bool","range":"<<testFilePath>>:2:4 - line:2:4","location":"<<testFilePath>>:2:4"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Boolean Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:2:4 - line:2:4","value":"true","type":"Builtin.Int1","location":"<<testFilePath>>:2:4"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:2:4 - line:2:4","names":"_builtinBooleanLiteral","type":"(_builtinBooleanLiteral: Builtin.Int1)","location":"<<testFilePath>>:2:4"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinBooleanLiteral:","range":"<<testFilePath>>:2:4 - line:2:4","type":"Bool","location":"<<testFilePath>>:2:4"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:2:4 - line:2:4","location":"<<testFilePath>>:2:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:2:4 - line:2:4","type":"Int1","location":"<<testFilePath>>:2:4"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:3:2 - line:3:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:3:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:3:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:3:8 - line:3:8","value":"Hi!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:3:8 - line:3:8","location":"<<testFilePath>>:3:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:3:7 - line:3:13","location":"<<testFilePath>>:3:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:3:7 - line:3:13","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:3:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:3:2 - line:3:13","type":"()","location":"<<testFilePath>>:3:2"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:6:4 - line:6:4","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:6:4"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:6:4 - line:6:4","decl":"Swift.(file).Bool.init(_builtinBooleanLiteral:)","function_ref":"single","type":"(Bool.Type) -> (Int1) -> Bool","location":"<<testFilePath>>:6:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:6:4 - line:6:4","type":"Bool.Type","location":"<<testFilePath>>:6:4","typerepr":"Bool"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int1) -> Bool","range":"<<testFilePath>>:6:4 - line:6:4","location":"<<testFilePath>>:6:4"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Boolean Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:6:4 - line:6:4","value":"false","type":"Builtin.Int1","location":"<<testFilePath>>:6:4"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:6:4 - line:6:4","names":"_builtinBooleanLiteral","type":"(_builtinBooleanLiteral: Builtin.Int1)","location":"<<testFilePath>>:6:4"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinBooleanLiteral:","range":"<<testFilePath>>:6:4 - line:6:4","type":"Bool","location":"<<testFilePath>>:6:4"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:6:4 - line:6:4","location":"<<testFilePath>>:6:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:6:4 - line:6:4","type":"Int1","location":"<<testFilePath>>:6:4"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:7:2 - line:7:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:7:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:7:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:7:8 - line:7:8","value":"Bye!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:7:8 - line:7:8","location":"<<testFilePath>>:7:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:7:7 - line:7:14","location":"<<testFilePath>>:7:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:7:7 - line:7:14","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:7:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:7:2 - line:7:14","type":"()","location":"<<testFilePath>>:7:2"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":["trueFunction()"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Component","keyValueAttributes":{"id":"Bool","bind":"Swift.(file).Bool"}}],"name":"Type Identity","keyValueAttributes":{}}],"name":"Result","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:9 - line:12:9","decl":"Swift.(file).Bool.init(_builtinBooleanLiteral:)","function_ref":"single","type":"(Bool.Type) -> (Int1) -> Bool","location":"<<testFilePath>>:12:9"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:9 - line:12:9","type":"Bool.Type","location":"<<testFilePath>>:12:9","typerepr":"Bool"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int1) -> Bool","range":"<<testFilePath>>:12:9 - line:12:9","location":"<<testFilePath>>:12:9"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Boolean Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:9 - line:12:9","value":"true","type":"Builtin.Int1","location":"<<testFilePath>>:12:9"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:9 - line:12:9","names":"_builtinBooleanLiteral","type":"(_builtinBooleanLiteral: Builtin.Int1)","location":"<<testFilePath>>:12:9"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinBooleanLiteral:","range":"<<testFilePath>>:12:9 - line:12:9","type":"Bool","location":"<<testFilePath>>:12:9"}}],"name":"Return Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"interface type":"() -> Bool","access":"internal"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:15:4 - line:15:4","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:15:4"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:15:4 - line:15:4","decl":"ifStatement.(file).trueFunction()@<<testFilePath>>:11:6","function_ref":"single","type":"() -> Bool","location":"<<testFilePath>>:15:4"}},{"standaloneAttributes":[],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()","range":"<<testFilePath>>:15:16 - line:15:17","location":"<<testFilePath>>:15:16"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:15:4 - line:15:17","type":"Bool","location":"<<testFilePath>>:15:4"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:15:4 - line:15:17","location":"<<testFilePath>>:15:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:15:4 - line:15:17","type":"Int1","location":"<<testFilePath>>:15:4"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:16:2 - line:16:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:16:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:16:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:16:8 - line:16:8","value":"Hi again!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:16:8 - line:16:8","location":"<<testFilePath>>:16:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:16:7 - line:16:19","location":"<<testFilePath>>:16:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:16:7 - line:16:19","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:16:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:16:2 - line:16:19","type":"()","location":"<<testFilePath>>:16:2"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:20:4 - line:20:4","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:20:4"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:20:4 - line:20:4","decl":"ifStatement.(file).trueFunction()@<<testFilePath>>:11:6","function_ref":"single","type":"() -> Bool","location":"<<testFilePath>>:20:4"}},{"standaloneAttributes":[],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()","range":"<<testFilePath>>:20:16 - line:20:17","location":"<<testFilePath>>:20:16"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:20:4 - line:20:17","type":"Bool","location":"<<testFilePath>>:20:4"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:20:4 - line:20:17","location":"<<testFilePath>>:20:4"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:20:4 - line:20:17","type":"Int1","location":"<<testFilePath>>:20:4"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:21:2 - line:21:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:21:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:21:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:21:8 - line:21:8","value":"Hello!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:21:8 - line:21:8","location":"<<testFilePath>>:21:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:21:7 - line:21:16","location":"<<testFilePath>>:21:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:21:7 - line:21:16","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:21:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:21:2 - line:21:16","type":"()","location":"<<testFilePath>>:21:2"}}],"name":"Brace Statement","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:23:9 - line:23:9","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:23:9"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:23:9 - line:23:9","decl":"ifStatement.(file).trueFunction()@<<testFilePath>>:11:6","function_ref":"single","type":"() -> Bool","location":"<<testFilePath>>:23:9"}},{"standaloneAttributes":[],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()","range":"<<testFilePath>>:23:21 - line:23:22","location":"<<testFilePath>>:23:21"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:23:9 - line:23:22","type":"Bool","location":"<<testFilePath>>:23:9"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:23:9 - line:23:22","location":"<<testFilePath>>:23:9"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:23:9 - line:23:22","type":"Int1","location":"<<testFilePath>>:23:9"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:2 - line:24:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:24:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:24:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:24:8 - line:24:8","value":"Oops, almost!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:24:8 - line:24:8","location":"<<testFilePath>>:24:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:24:7 - line:24:23","location":"<<testFilePath>>:24:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:24:7 - line:24:23","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:24:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:24:2 - line:24:23","type":"()","location":"<<testFilePath>>:24:2"}}],"name":"Brace Statement","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:26:9 - line:26:9","decl":"Swift.(file).Bool._getBuiltinLogicValue()","function_ref":"double","type":"(Bool) -> () -> Int1","location":"<<testFilePath>>:26:9"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:26:9 - line:26:9","decl":"ifStatement.(file).trueFunction()@<<testFilePath>>:11:6","function_ref":"single","type":"() -> Bool","location":"<<testFilePath>>:26:9"}},{"standaloneAttributes":[],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()","range":"<<testFilePath>>:26:21 - line:26:22","location":"<<testFilePath>>:26:21"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:26:9 - line:26:22","type":"Bool","location":"<<testFilePath>>:26:9"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"() -> Int1","range":"<<testFilePath>>:26:9 - line:26:22","location":"<<testFilePath>>:26:9"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:26:9 - line:26:22","type":"Int1","location":"<<testFilePath>>:26:9"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:2 - line:27:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:27:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:27:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:27:8 - line:27:8","value":"Not quite...","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:27:8 - line:27:8","location":"<<testFilePath>>:27:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:27:7 - line:27:22","location":"<<testFilePath>>:27:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:27:7 - line:27:22","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:27:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:27:2 - line:27:22","type":"()","location":"<<testFilePath>>:27:2"}}],"name":"Brace Statement","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:30:2 - line:30:2","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:30:2"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:30:8","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:30:8 - line:30:8","value":"Bye!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:30:8 - line:30:8","location":"<<testFilePath>>:30:8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:30:7 - line:30:14","location":"<<testFilePath>>:30:8"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:30:7 - line:30:14","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:30:8","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:30:2 - line:30:14","type":"()","location":"<<testFilePath>>:30:2"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"If Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}}],"name":"Source File","keyValueAttributes":{}}