(source_file
  (import_decl 'Foundation')
  (top_level_code_decl
    (brace_stmt
      (pattern_binding_decl
        (pattern_typed type='Int?'
          (pattern_named type='Int?' 'x')
)
        (call_expr implicit type='Int?' nothrow arg_labels=nilLiteral:
          (constructor_ref_call_expr implicit type='(()) -> Int?' nothrow
            (declref_expr implicit type='(Optional<Int>.Type) -> (()) -> Optional<Int>' decl=Swift.(file).Optional.init(nilLiteral:) [with Int] function_ref=single)
            (type_expr implicit type='Int?.Type' typerepr='<<NULL>>'))
          (tuple_expr implicit type='(nilLiteral: ())' names=nilLiteral
            (tuple_expr implicit type='()'))))
))
  (var_decl "x" type='Int?' interface type='Int?' access=internal storage_kind=stored))
