{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["GRYAlternative(swift:kotlin:)","<T>"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"<Generic>","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["swiftExpression"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"T","apiName":"swift","interface type":"T"}},{"standaloneAttributes":["kotlinExpression"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"String","apiName":"kotlin","interface type":"String"}}],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Component","keyValueAttributes":{"id":"T","bind":"bhaskara.(file).GRYAlternative(swift:kotlin:).T@<<testFilePath>>:17:21"}}],"name":"Type Identity","keyValueAttributes":{}}],"name":"Result","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:9 - line:18:9","decl":"bhaskara.(file).GRYAlternative(swift:kotlin:).swiftExpression@<<testFilePath>>:17:30","function_ref":"unapplied","type":"T","location":"<<testFilePath>>:18:9"}}],"name":"Return Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"captures":"","interface type":"<T> (swift: T, kotlin: String) -> T","access":"internal"}},{"standaloneAttributes":["Foundation"],"subTrees":[],"name":"Import Declaration","keyValueAttributes":{}},{"standaloneAttributes":["bhaskara(a:b:c:)"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["a"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"Double","apiName":"a","interface type":"Double"}},{"standaloneAttributes":["b"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"Double","apiName":"b","interface type":"Double"}},{"standaloneAttributes":["c"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"Double","apiName":"c","interface type":"Double"}}],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Component","keyValueAttributes":{"id":"Double","bind":"Swift.(file).Double"}}],"name":"Type Identity","keyValueAttributes":{}}],"name":"Result","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["delta"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Double"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:18 - line:24:18","decl":"Swift.(file).Double.-","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:24:18"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:18 - line:24:18","type":"Double.Type","location":"<<testFilePath>>:24:18","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:24:18 - line:24:18","location":"<<testFilePath>>:24:18"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:15 - line:24:15","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:24:15"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:15 - line:24:15","type":"Double.Type","location":"<<testFilePath>>:24:15","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:24:15 - line:24:15","location":"<<testFilePath>>:24:15"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:14 - line:24:14","decl":"bhaskara.(file).bhaskara(a:b:c:).b@<<testFilePath>>:23:26","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:24:14"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:16 - line:24:16","decl":"bhaskara.(file).bhaskara(a:b:c:).b@<<testFilePath>>:23:26","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:24:16"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:24:14 - line:24:16","location":"<<testFilePath>>:24:14"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:24:14 - line:24:16","location":"<<testFilePath>>:24:15"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:23 - line:24:23","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:24:23"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:23 - line:24:23","type":"Double.Type","location":"<<testFilePath>>:24:23","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:24:23 - line:24:23","location":"<<testFilePath>>:24:23"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:21 - line:24:21","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:24:21"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:21 - line:24:21","type":"Double.Type","location":"<<testFilePath>>:24:21","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:24:21 - line:24:21","location":"<<testFilePath>>:24:21"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:20 - line:24:20","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:24:20"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:20 - line:24:20","type":"Double.Type","location":"<<testFilePath>>:24:20","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:24:20 - line:24:20","location":"<<testFilePath>>:24:20"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:20 - line:24:20","value":"4","type":"Int2048","location":"<<testFilePath>>:24:20"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:20 - line:24:20","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:24:20"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:24:20 - line:24:20","type":"Double","location":"<<testFilePath>>:24:20"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:22 - line:24:22","decl":"bhaskara.(file).bhaskara(a:b:c:).a@<<testFilePath>>:23:15","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:24:22"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:24:20 - line:24:22","location":"<<testFilePath>>:24:20"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:24:20 - line:24:22","location":"<<testFilePath>>:24:21"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:24 - line:24:24","decl":"bhaskara.(file).bhaskara(a:b:c:).c@<<testFilePath>>:23:37","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:24:24"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:24:20 - line:24:24","location":"<<testFilePath>>:24:20"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:24:20 - line:24:24","location":"<<testFilePath>>:24:23"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:24:14 - line:24:24","location":"<<testFilePath>>:24:14"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:24:14 - line:24:24","location":"<<testFilePath>>:24:18"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}},{"standaloneAttributes":["delta","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"private","type":"Double","interface type":"Double"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["deltaRoot"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Double"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["with Double"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:25:18 - line:25:18","decl":"bhaskara.(file).GRYAlternative(swift:kotlin:)@<<testFilePath>>:17:6","function_ref":"single","type":"(Double, String) -> Double","location":"<<testFilePath>>:25:18"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:25:40 - line:25:40","decl":"Darwin.(file).sqrt","function_ref":"single","type":"(Double) -> Double","location":"<<testFilePath>>:25:40"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:25:45 - line:25:45","decl":"bhaskara.(file).bhaskara(a:b:c:).delta@<<testFilePath>>:24:6","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:25:45"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(Double)","range":"<<testFilePath>>:25:44 - line:25:50","location":"<<testFilePath>>:25:45"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:25:40 - line:25:50","type":"Double","location":"<<testFilePath>>:25:40"}},{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:26:20","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:26:20 - line:26:20","value":"Math.sqrt(delta)","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:25:32 - line:26:38","names":"swift,kotlin","type":"(swift: Double, kotlin: String)","location":"<<testFilePath>>:25:32"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"swift:kotlin:","range":"<<testFilePath>>:25:18 - line:26:38","type":"Double","location":"<<testFilePath>>:25:18"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}},{"standaloneAttributes":["deltaRoot","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"private","type":"Double","interface type":"Double"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["root1"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Double"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:31 - line:27:31","decl":"Swift.(file).Double.\/","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:27:31"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:31 - line:27:31","type":"Double.Type","location":"<<testFilePath>>:27:31","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:27:31 - line:27:31","location":"<<testFilePath>>:27:31"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:18 - line:27:18","decl":"Swift.(file).Double.+","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:27:18"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:18 - line:27:18","type":"Double.Type","location":"<<testFilePath>>:27:18","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:27:18 - line:27:18","location":"<<testFilePath>>:27:18"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:15 - line:27:15","decl":"Swift.(file).Double.-","function_ref":"unapplied","type":"(Double.Type) -> (Double) -> Double","location":"<<testFilePath>>:27:15"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:15 - line:27:15","type":"Double.Type","location":"<<testFilePath>>:27:15","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double) -> Double","range":"<<testFilePath>>:27:15 - line:27:15","location":"<<testFilePath>>:27:15"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:16 - line:27:16","decl":"bhaskara.(file).bhaskara(a:b:c:).b@<<testFilePath>>:23:26","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:27:16"}}],"name":"Prefix Unary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:27:15 - line:27:16","location":"<<testFilePath>>:27:15"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:20 - line:27:20","decl":"bhaskara.(file).bhaskara(a:b:c:).deltaRoot@<<testFilePath>>:25:6","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:27:20"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:27:15 - line:27:20","location":"<<testFilePath>>:27:15"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:27:15 - line:27:20","location":"<<testFilePath>>:27:18"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(Double)","range":"<<testFilePath>>:27:14 - line:27:29","location":"<<testFilePath>>:27:18"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:35 - line:27:35","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:27:35"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:35 - line:27:35","type":"Double.Type","location":"<<testFilePath>>:27:35","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:27:35 - line:27:35","location":"<<testFilePath>>:27:35"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:34 - line:27:34","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:27:34"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:34 - line:27:34","type":"Double.Type","location":"<<testFilePath>>:27:34","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:27:34 - line:27:34","location":"<<testFilePath>>:27:34"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:34 - line:27:34","value":"2","type":"Int2048","location":"<<testFilePath>>:27:34"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:34 - line:27:34","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:27:34"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:27:34 - line:27:34","type":"Double","location":"<<testFilePath>>:27:34"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:36 - line:27:36","decl":"bhaskara.(file).bhaskara(a:b:c:).a@<<testFilePath>>:23:15","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:27:36"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:27:34 - line:27:36","location":"<<testFilePath>>:27:34"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:27:34 - line:27:36","location":"<<testFilePath>>:27:35"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(Double)","range":"<<testFilePath>>:27:33 - line:27:37","location":"<<testFilePath>>:27:35"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"((Double), (Double))","range":"<<testFilePath>>:27:14 - line:27:37","location":"<<testFilePath>>:27:14"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:27:14 - line:27:37","location":"<<testFilePath>>:27:31"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}},{"standaloneAttributes":["root1","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"private","type":"Double","interface type":"Double"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:28:9 - line:28:9","decl":"bhaskara.(file).bhaskara(a:b:c:).root1@<<testFilePath>>:27:6","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:28:9"}}],"name":"Return Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"interface type":"(Double, Double, Double) -> Double","access":"internal"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:1 - line:31:1","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:31:1"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:7 - line:31:7","decl":"bhaskara.(file).bhaskara(a:b:c:)@<<testFilePath>>:23:6","function_ref":"single","type":"(Double, Double, Double) -> Double","location":"<<testFilePath>>:31:7"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:19 - line:31:19","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:31:19"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:19 - line:31:19","type":"Double.Type","location":"<<testFilePath>>:31:19","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:31:19 - line:31:19","location":"<<testFilePath>>:31:19"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:19 - line:31:19","value":"1","type":"Int2048","location":"<<testFilePath>>:31:19"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:19 - line:31:19","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:31:19"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:31:19 - line:31:19","type":"Double","location":"<<testFilePath>>:31:19"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:25 - line:31:25","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:31:25"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:25 - line:31:25","type":"Double.Type","location":"<<testFilePath>>:31:25","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:31:25 - line:31:25","location":"<<testFilePath>>:31:25"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:25 - line:31:25","value":"0","type":"Int2048","location":"<<testFilePath>>:31:25"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:25 - line:31:25","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:31:25"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:31:25 - line:31:25","type":"Double","location":"<<testFilePath>>:31:25"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:31 - line:31:31","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:31:31"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:31 - line:31:31","type":"Double.Type","location":"<<testFilePath>>:31:31","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:31:31 - line:31:31","location":"<<testFilePath>>:31:31"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["negative"],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:31 - line:31:32","value":"-9","type":"Int2048","location":"<<testFilePath>>:31:31"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:31 - line:31:32","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:31:31"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:31:31 - line:31:32","type":"Double","location":"<<testFilePath>>:31:31"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:31:15 - line:31:33","names":"a,b,c","type":"(a: Double, b: Double, c: Double)","location":"<<testFilePath>>:31:15"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"a:b:c:","range":"<<testFilePath>>:31:7 - line:31:33","type":"Double","location":"<<testFilePath>>:31:7"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:31:7 - line:31:33","location":"<<testFilePath>>:31:7"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:31:6 - line:31:34","location":"<<testFilePath>>:31:7"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:31:6 - line:31:34","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:31:7","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:31:1 - line:31:34","type":"()","location":"<<testFilePath>>:31:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}}],"name":"Source File","keyValueAttributes":{}}