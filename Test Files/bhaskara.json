{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["GRYIgnoreNext()"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"interface type":"() -> ()","access":"internal"}},{"standaloneAttributes":["GRYAlternative(swift:kotlin:)","<T>"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"<Generic>","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["swiftExpression"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"T","apiName":"swift","interface type":"T"}},{"standaloneAttributes":["kotlinExpression"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"String","apiName":"kotlin","interface type":"String"}}],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Component","keyValueAttributes":{"id":"T","bind":"bhaskara.(file).GRYAlternative(swift:kotlin:).T@<<testFilePath>>:3:21"}}],"name":"Type Identity","keyValueAttributes":{}}],"name":"Result","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:4:9 - line:4:9","decl":"bhaskara.(file).GRYAlternative(swift:kotlin:).swiftExpression@<<testFilePath>>:3:30","function_ref":"unapplied","type":"T","location":"<<testFilePath>>:4:9"}}],"name":"Return Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"captures":"","interface type":"<T> (swift: T, kotlin: String) -> T","access":"internal"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:7:1 - line:7:1","decl":"bhaskara.(file).GRYIgnoreNext()@<<testFilePath>>:1:6","function_ref":"single","type":"() -> ()","location":"<<testFilePath>>:7:1"}},{"standaloneAttributes":[],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()","range":"<<testFilePath>>:7:14 - line:7:15","location":"<<testFilePath>>:7:14"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:7:1 - line:7:15","type":"()","location":"<<testFilePath>>:7:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":["Foundation"],"subTrees":[],"name":"Import Declaration","keyValueAttributes":{}},{"standaloneAttributes":["bhaskara(a:b:c:)"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["a"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"Double","apiName":"a","interface type":"Double"}},{"standaloneAttributes":["b"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"Double","apiName":"b","interface type":"Double"}},{"standaloneAttributes":["c"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"Double","apiName":"c","interface type":"Double"}}],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Component","keyValueAttributes":{"id":"Double","bind":"Swift.(file).Double"}}],"name":"Type Identity","keyValueAttributes":{}}],"name":"Result","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["delta"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Double"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:18 - line:11:18","decl":"Swift.(file).Double.-","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:11:18"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:18 - line:11:18","type":"Double.Type","location":"<<testFilePath>>:11:18","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:11:18 - line:11:18","location":"<<testFilePath>>:11:18"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:15 - line:11:15","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:11:15"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:15 - line:11:15","type":"Double.Type","location":"<<testFilePath>>:11:15","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:11:15 - line:11:15","location":"<<testFilePath>>:11:15"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:14 - line:11:14","decl":"bhaskara.(file).bhaskara(a:b:c:).b@<<testFilePath>>:10:26","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:11:14"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:16 - line:11:16","decl":"bhaskara.(file).bhaskara(a:b:c:).b@<<testFilePath>>:10:26","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:11:16"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:11:14 - line:11:16","location":"<<testFilePath>>:11:14"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:11:14 - line:11:16","location":"<<testFilePath>>:11:15"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:23 - line:11:23","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:11:23"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:23 - line:11:23","type":"Double.Type","location":"<<testFilePath>>:11:23","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:11:23 - line:11:23","location":"<<testFilePath>>:11:23"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:21 - line:11:21","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:11:21"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:21 - line:11:21","type":"Double.Type","location":"<<testFilePath>>:11:21","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:11:21 - line:11:21","location":"<<testFilePath>>:11:21"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:20 - line:11:20","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:11:20"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:20 - line:11:20","type":"Double.Type","location":"<<testFilePath>>:11:20","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:11:20 - line:11:20","location":"<<testFilePath>>:11:20"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:20 - line:11:20","value":"4","type":"Int2048","location":"<<testFilePath>>:11:20"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:20 - line:11:20","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:11:20"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:11:20 - line:11:20","type":"Double","location":"<<testFilePath>>:11:20"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:22 - line:11:22","decl":"bhaskara.(file).bhaskara(a:b:c:).a@<<testFilePath>>:10:15","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:11:22"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:11:20 - line:11:22","location":"<<testFilePath>>:11:20"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:11:20 - line:11:22","location":"<<testFilePath>>:11:21"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:24 - line:11:24","decl":"bhaskara.(file).bhaskara(a:b:c:).c@<<testFilePath>>:10:37","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:11:24"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:11:20 - line:11:24","location":"<<testFilePath>>:11:20"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:11:20 - line:11:24","location":"<<testFilePath>>:11:23"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:11:14 - line:11:24","location":"<<testFilePath>>:11:14"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:11:14 - line:11:24","location":"<<testFilePath>>:11:18"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}},{"standaloneAttributes":["delta","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"private","type":"Double","interface type":"Double"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["deltaRoot"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Double"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["with Double"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:18 - line:12:18","decl":"bhaskara.(file).GRYAlternative(swift:kotlin:)@<<testFilePath>>:3:6","function_ref":"single","type":"(Double, String) -> Double","location":"<<testFilePath>>:12:18"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:40 - line:12:40","decl":"Darwin.(file).sqrt","function_ref":"single","type":"(Double) -> Double","location":"<<testFilePath>>:12:40"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:45 - line:12:45","decl":"bhaskara.(file).bhaskara(a:b:c:).delta@<<testFilePath>>:11:6","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:12:45"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(Double)","range":"<<testFilePath>>:12:44 - line:12:50","location":"<<testFilePath>>:12:45"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:12:40 - line:12:50","type":"Double","location":"<<testFilePath>>:12:40"}},{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:13:20","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:13:20 - line:13:20","value":"Math.sqrt(delta)","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:12:32 - line:13:38","names":"swift,kotlin","type":"(swift: Double, kotlin: String)","location":"<<testFilePath>>:12:32"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"swift:kotlin:","range":"<<testFilePath>>:12:18 - line:13:38","type":"Double","location":"<<testFilePath>>:12:18"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}},{"standaloneAttributes":["deltaRoot","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"private","type":"Double","interface type":"Double"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["root1"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Double"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:31 - line:14:31","decl":"Swift.(file).Double.\/","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:14:31"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:31 - line:14:31","type":"Double.Type","location":"<<testFilePath>>:14:31","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:14:31 - line:14:31","location":"<<testFilePath>>:14:31"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:18 - line:14:18","decl":"Swift.(file).Double.+","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:14:18"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:18 - line:14:18","type":"Double.Type","location":"<<testFilePath>>:14:18","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:14:18 - line:14:18","location":"<<testFilePath>>:14:18"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:15 - line:14:15","decl":"Swift.(file).Double.-","function_ref":"unapplied","type":"(Double.Type) -> (Double) -> Double","location":"<<testFilePath>>:14:15"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:15 - line:14:15","type":"Double.Type","location":"<<testFilePath>>:14:15","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double) -> Double","range":"<<testFilePath>>:14:15 - line:14:15","location":"<<testFilePath>>:14:15"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:16 - line:14:16","decl":"bhaskara.(file).bhaskara(a:b:c:).b@<<testFilePath>>:10:26","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:14:16"}}],"name":"Prefix Unary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:14:15 - line:14:16","location":"<<testFilePath>>:14:15"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:20 - line:14:20","decl":"bhaskara.(file).bhaskara(a:b:c:).deltaRoot@<<testFilePath>>:12:6","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:14:20"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:14:15 - line:14:20","location":"<<testFilePath>>:14:15"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:14:15 - line:14:20","location":"<<testFilePath>>:14:18"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(Double)","range":"<<testFilePath>>:14:14 - line:14:29","location":"<<testFilePath>>:14:18"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:35 - line:14:35","decl":"Swift.(file).Double.*","function_ref":"unapplied","type":"(Double.Type) -> (Double, Double) -> Double","location":"<<testFilePath>>:14:35"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:35 - line:14:35","type":"Double.Type","location":"<<testFilePath>>:14:35","typerepr":"Double"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Double, Double) -> Double","range":"<<testFilePath>>:14:35 - line:14:35","location":"<<testFilePath>>:14:35"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:34 - line:14:34","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:14:34"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:34 - line:14:34","type":"Double.Type","location":"<<testFilePath>>:14:34","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:14:34 - line:14:34","location":"<<testFilePath>>:14:34"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:34 - line:14:34","value":"2","type":"Int2048","location":"<<testFilePath>>:14:34"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:34 - line:14:34","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:14:34"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:14:34 - line:14:34","type":"Double","location":"<<testFilePath>>:14:34"}},{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:36 - line:14:36","decl":"bhaskara.(file).bhaskara(a:b:c:).a@<<testFilePath>>:10:15","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:14:36"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Double, Double)","range":"<<testFilePath>>:14:34 - line:14:36","location":"<<testFilePath>>:14:34"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:14:34 - line:14:36","location":"<<testFilePath>>:14:35"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(Double)","range":"<<testFilePath>>:14:33 - line:14:37","location":"<<testFilePath>>:14:35"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"((Double), (Double))","range":"<<testFilePath>>:14:14 - line:14:37","location":"<<testFilePath>>:14:14"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Double","range":"<<testFilePath>>:14:14 - line:14:37","location":"<<testFilePath>>:14:31"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}},{"standaloneAttributes":["root1","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"private","type":"Double","interface type":"Double"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:15:9 - line:15:9","decl":"bhaskara.(file).bhaskara(a:b:c:).root1@<<testFilePath>>:14:6","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:15:9"}}],"name":"Return Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"interface type":"(Double, Double, Double) -> Double","access":"internal"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:1 - line:18:1","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:18:1"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:7 - line:18:7","decl":"bhaskara.(file).bhaskara(a:b:c:)@<<testFilePath>>:10:6","function_ref":"single","type":"(Double, Double, Double) -> Double","location":"<<testFilePath>>:18:7"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:19 - line:18:19","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:18:19"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:19 - line:18:19","type":"Double.Type","location":"<<testFilePath>>:18:19","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:18:19 - line:18:19","location":"<<testFilePath>>:18:19"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:19 - line:18:19","value":"1","type":"Int2048","location":"<<testFilePath>>:18:19"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:19 - line:18:19","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:18:19"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:18:19 - line:18:19","type":"Double","location":"<<testFilePath>>:18:19"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:25 - line:18:25","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:18:25"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:25 - line:18:25","type":"Double.Type","location":"<<testFilePath>>:18:25","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:18:25 - line:18:25","location":"<<testFilePath>>:18:25"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:25 - line:18:25","value":"0","type":"Int2048","location":"<<testFilePath>>:18:25"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:25 - line:18:25","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:18:25"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:18:25 - line:18:25","type":"Double","location":"<<testFilePath>>:18:25"}},{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:31 - line:18:31","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:18:31"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:31 - line:18:31","type":"Double.Type","location":"<<testFilePath>>:18:31","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:18:31 - line:18:31","location":"<<testFilePath>>:18:31"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["negative"],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:31 - line:18:32","value":"-9","type":"Int2048","location":"<<testFilePath>>:18:31"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:31 - line:18:32","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:18:31"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:18:31 - line:18:32","type":"Double","location":"<<testFilePath>>:18:31"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:18:15 - line:18:33","names":"a,b,c","type":"(a: Double, b: Double, c: Double)","location":"<<testFilePath>>:18:15"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"a:b:c:","range":"<<testFilePath>>:18:7 - line:18:33","type":"Double","location":"<<testFilePath>>:18:7"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:18:7 - line:18:33","location":"<<testFilePath>>:18:7"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:18:6 - line:18:34","location":"<<testFilePath>>:18:7"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:18:6 - line:18:34","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:18:7","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:18:1 - line:18:34","type":"()","location":"<<testFilePath>>:18:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}}],"name":"Source File","keyValueAttributes":{}}