{"declarations":[{"prefix":"GRYIgnoreNext","returnType":"()","access":"internal","astName":"functionDeclaration","parameterNames":[],"parameterTypes":[],"statements":[],"isImplicit":false},{"prefix":"GRYInsert","returnType":"()","access":"internal","astName":"functionDeclaration","parameterNames":["kotlinExpression"],"parameterTypes":["String"],"statements":[],"isImplicit":false},{"prefix":"GRYAlternative","returnType":"T","access":"internal","astName":"functionDeclaration","parameterNames":["swiftExpression","kotlinExpression"],"parameterTypes":["T","String"],"statements":[{"astName":"returnStatement","expression":{"astName":"declarationReferenceExpression","identifier":"swiftExpression"}}],"isImplicit":false},{"astName":"protocolDeclaration","name":"GRYIgnore"},{"prefix":"GRYDeclarations","returnType":"()","access":"private","astName":"functionDeclaration","parameterNames":[],"parameterTypes":[],"statements":[{"astName":"expression","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"GRYInsert"},"parameters":{"astName":"tupleExpression","pairs":[{"expression":{"astName":"literalStringExpression","value":"import java.util.*"}}]}}}],"isImplicit":false},{"members":[],"astName":"classDeclaration","name":"IgnoredClass","inherits":["GRYIgnore"]},{"elements":[],"access":"internal","astName":"enumDeclaration","name":"IgnoredEnum","inherits":["GRYIgnore"]}],"statements":[{"astName":"importDeclaration","name":"Foundation"},{"setter":null,"getter":null,"expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"GRYAlternative(swift:kotlin:)"},"parameters":{"astName":"tupleExpression","pairs":[{"name":"swift","expression":{"astName":"literalStringExpression","value":"swift"}},{"name":"kotlin","expression":{"astName":"literalStringExpression","value":"\\\"kotlin\\\""}}]}},"extendsType":null,"astName":"variableDeclaration","identifier":"languageName","typeName":"String","isLet":true},{"astName":"expression","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"print(_:separator:terminator:)"},"parameters":{"astName":"tupleExpression","pairs":[{"expression":{"astName":"interpolatedStringLiteralExpression","expressions":[{"astName":"literalStringExpression","value":"Hello from "},{"astName":"declarationReferenceExpression","identifier":"languageName"},{"astName":"literalStringExpression","value":"!"}]}}]}}},{"setter":null,"getter":null,"expression":{"operatorSymbol":"+","rightExpression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"GRYAlternative(swift:kotlin:)"},"parameters":{"astName":"tupleExpression","pairs":[{"name":"swift","expression":{"astName":"literalIntExpression","value":2}},{"name":"kotlin","expression":{"astName":"literalStringExpression","value":"5-3"}}]}},"astName":"binaryOperatorExpression","leftExpression":{"astName":"literalIntExpression","value":40}},"extendsType":null,"astName":"variableDeclaration","identifier":"magicNumber","typeName":"Int","isLet":true},{"astName":"expression","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"print(_:separator:terminator:)"},"parameters":{"astName":"tupleExpression","pairs":[{"expression":{"astName":"declarationReferenceExpression","identifier":"magicNumber"}}]}}},{"astName":"expression","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"GRYInsert"},"parameters":{"astName":"tupleExpression","pairs":[{"expression":{"astName":"literalStringExpression","value":"println(\\\"This will be ignored by swift, but not by kotlin.\\\")"}}]}}},{"astName":"expression","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"GRYIgnoreNext()"},"parameters":{"astName":"tupleExpression","pairs":[]}}},{"astName":"expression","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"print(_:separator:terminator:)"},"parameters":{"astName":"tupleExpression","pairs":[{"expression":{"astName":"literalStringExpression","value":"This will be ignored by kotlin, but not by swift."}}]}}},{"setter":null,"getter":null,"expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"GRYAlternative(swift:kotlin:)"},"parameters":{"astName":"tupleExpression","pairs":[{"name":"swift","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"sqrt"},"parameters":{"astName":"tupleExpression","pairs":[{"expression":{"astName":"literalDoubleExpression","value":9}}]}}},{"name":"kotlin","expression":{"astName":"literalStringExpression","value":"Math.sqrt(9.0)"}}]}},"extendsType":null,"astName":"variableDeclaration","identifier":"squareRoot","typeName":"Double","isLet":true},{"astName":"expression","expression":{"astName":"callExpression","function":{"astName":"declarationReferenceExpression","identifier":"print(_:separator:terminator:)"},"parameters":{"astName":"tupleExpression","pairs":[{"expression":{"astName":"declarationReferenceExpression","identifier":"squareRoot"}}]}}}]}