{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["GRYKotlinIgnoreNext()"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"interface type":"() -> ()","access":"internal"}},{"standaloneAttributes":["GRYKotlinLiteral(_:)"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["kotlinExpression"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"String","interface type":"String"}}],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"interface type":"(String) -> ()","access":"internal"}},{"standaloneAttributes":["GRYKotlinLiteral(_:_:)","<T>"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"<Generic>","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["swiftExpression"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"T","interface type":"T"}},{"standaloneAttributes":["kotlinExpression"],"subTrees":[],"name":"Parameter","keyValueAttributes":{"type":"String","interface type":"String"}}],"name":"Parameter List","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Component","keyValueAttributes":{"id":"T","bind":"kotlinLiterals.(file).GRYKotlinLiteral(_:_:).T@<<testFilePath>>:5:23"}}],"name":"Type Identity","keyValueAttributes":{}}],"name":"Result","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:6:9 - line:6:9","decl":"kotlinLiterals.(file).GRYKotlinLiteral(_:_:).swiftExpression@<<testFilePath>>:5:28","function_ref":"unapplied","type":"T","location":"<<testFilePath>>:6:9"}}],"name":"Return Statement","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Function Declaration","keyValueAttributes":{"captures":"","interface type":"<T> (T, String) -> T","access":"internal"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["languageName"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"String"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["with String"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:10:20 - line:10:20","decl":"kotlinLiterals.(file).GRYKotlinLiteral@<<testFilePath>>:5:6","function_ref":"single","type":"(String, String) -> String","location":"<<testFilePath>>:10:20"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:10:37","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:10:37 - line:10:37","value":"swift","type":"String","initializer":"**NULL**","encoding":"utf8"}},{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:10:46","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:10:46 - line:10:46","value":"\\\"kotlin\\\"","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:10:36 - line:10:58","names":"'',''","type":"(String, String)","location":"<<testFilePath>>:10:36"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:_:","range":"<<testFilePath>>:10:20 - line:10:58","type":"String","location":"<<testFilePath>>:10:20"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":["languageName","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"internal","type":"String","interface type":"String"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:1 - line:11:1","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:11:1"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:11:7","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:11:7 - line:11:7","value":"Hello from ","type":"String","initializer":"**NULL**","encoding":"utf8"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["direct_to_storage"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:11:21 - line:11:21","decl":"kotlinLiterals.(file).languageName@<<testFilePath>>:10:5","function_ref":"unapplied","type":"String","location":"<<testFilePath>>:11:21"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(String)","range":"<<testFilePath>>:11:20 - line:11:33","location":"<<testFilePath>>:11:21"}},{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:11:34","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:11:34 - line:11:34","value":"!","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Interpolated String Literal Expression","keyValueAttributes":{"type":"String","range":"<<testFilePath>>:11:7 - line:11:7","location":"<<testFilePath>>:11:7"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:11:7 - line:11:7","location":"<<testFilePath>>:11:7"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:11:6 - line:11:36","location":"<<testFilePath>>:11:7"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:11:6 - line:11:36","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:11:7","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:11:1 - line:11:36","type":"()","location":"<<testFilePath>>:11:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["magicNumber"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Int"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:22 - line:13:22","decl":"Swift.(file).Int.+","function_ref":"unapplied","type":"(Int.Type) -> (Int, Int) -> Int","location":"<<testFilePath>>:13:22"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:22 - line:13:22","type":"Int.Type","location":"<<testFilePath>>:13:22","typerepr":"Int"}}],"name":"Dot Syntax Call Expression","keyValueAttributes":{"type":"(Int, Int) -> Int","range":"<<testFilePath>>:13:22 - line:13:22","location":"<<testFilePath>>:13:22"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:19 - line:13:19","decl":"Swift.(file).Int.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Int.Type) -> (_MaxBuiltinIntegerType) -> Int","location":"<<testFilePath>>:13:19"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:19 - line:13:19","type":"Int.Type","location":"<<testFilePath>>:13:19","typerepr":"Int"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(_MaxBuiltinIntegerType) -> Int","range":"<<testFilePath>>:13:19 - line:13:19","location":"<<testFilePath>>:13:19"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:19 - line:13:19","value":"40","type":"Int2048","location":"<<testFilePath>>:13:19"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:19 - line:13:19","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:13:19"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:13:19 - line:13:19","type":"Int","location":"<<testFilePath>>:13:19"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["with Int"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:24 - line:13:24","decl":"kotlinLiterals.(file).GRYKotlinLiteral@<<testFilePath>>:5:6","function_ref":"double","type":"(Int, String) -> Int","location":"<<testFilePath>>:13:24"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:41 - line:13:41","decl":"Swift.(file).Int.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Int.Type) -> (_MaxBuiltinIntegerType) -> Int","location":"<<testFilePath>>:13:41"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:41 - line:13:41","type":"Int.Type","location":"<<testFilePath>>:13:41","typerepr":"Int"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(_MaxBuiltinIntegerType) -> Int","range":"<<testFilePath>>:13:41 - line:13:41","location":"<<testFilePath>>:13:41"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:41 - line:13:41","value":"2","type":"Int2048","location":"<<testFilePath>>:13:41"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:41 - line:13:41","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:13:41"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:13:41 - line:13:41","type":"Int","location":"<<testFilePath>>:13:41"}},{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:13:44","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:13:44 - line:13:44","value":"5-3","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:13:40 - line:13:49","names":"'',''","type":"(Int, String)","location":"<<testFilePath>>:13:40"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:_:","range":"<<testFilePath>>:13:24 - line:13:49","type":"Int","location":"<<testFilePath>>:13:24"}}],"name":"Tuple Expression","keyValueAttributes":{"type":"(Int, Int)","range":"<<testFilePath>>:13:19 - line:13:49","location":"<<testFilePath>>:13:19"}}],"name":"Binary Expression","keyValueAttributes":{"type":"Int","range":"<<testFilePath>>:13:19 - line:13:49","location":"<<testFilePath>>:13:22"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":["magicNumber","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"internal","type":"Int","interface type":"Int"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:1 - line:14:1","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:14:1"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["direct_to_storage"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:14:7 - line:14:7","decl":"kotlinLiterals.(file).magicNumber@<<testFilePath>>:13:5","function_ref":"unapplied","type":"Int","location":"<<testFilePath>>:14:7"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:14:7 - line:14:7","location":"<<testFilePath>>:14:7"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:14:6 - line:14:18","location":"<<testFilePath>>:14:7"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:14:6 - line:14:18","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:14:7","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:14:1 - line:14:18","type":"()","location":"<<testFilePath>>:14:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:17:1 - line:17:1","decl":"kotlinLiterals.(file).GRYKotlinLiteral@<<testFilePath>>:3:6","function_ref":"single","type":"(String) -> ()","location":"<<testFilePath>>:17:1"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:17:18","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:17:18 - line:17:18","value":"println(\\\"This will be ignored by swift, but not by kotlin.\\\")","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(String)","range":"<<testFilePath>>:17:17 - line:17:82","location":"<<testFilePath>>:17:18"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:17:1 - line:17:82","type":"()","location":"<<testFilePath>>:17:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:20:1 - line:20:1","decl":"kotlinLiterals.(file).GRYKotlinIgnoreNext()@<<testFilePath>>:1:6","function_ref":"single","type":"() -> ()","location":"<<testFilePath>>:20:1"}},{"standaloneAttributes":[],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()","range":"<<testFilePath>>:20:20 - line:20:21","location":"<<testFilePath>>:20:20"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:20:1 - line:20:21","type":"()","location":"<<testFilePath>>:20:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":["Foundation"],"subTrees":[],"name":"Import Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:23:1 - line:23:1","decl":"kotlinLiterals.(file).GRYKotlinIgnoreNext()@<<testFilePath>>:1:6","function_ref":"single","type":"() -> ()","location":"<<testFilePath>>:23:1"}},{"standaloneAttributes":[],"subTrees":[],"name":"Tuple Expression","keyValueAttributes":{"type":"()","range":"<<testFilePath>>:23:20 - line:23:21","location":"<<testFilePath>>:23:20"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"","range":"<<testFilePath>>:23:1 - line:23:21","type":"()","location":"<<testFilePath>>:23:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:24:1 - line:24:1","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:24:1"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:24:7","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:24:7 - line:24:7","value":"This will be ignored by kotlin, but not by swift.","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:24:7 - line:24:7","location":"<<testFilePath>>:24:7"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:24:6 - line:24:58","location":"<<testFilePath>>:24:7"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:24:6 - line:24:58","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:24:7","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:24:1 - line:24:58","type":"()","location":"<<testFilePath>>:24:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["squareRoot"],"subTrees":[],"name":"Pattern Named","keyValueAttributes":{"type":"Double"}},{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":["with Double"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:18 - line:27:18","decl":"kotlinLiterals.(file).GRYKotlinLiteral@<<testFilePath>>:5:6","function_ref":"single","type":"(Double, String) -> Double","location":"<<testFilePath>>:27:18"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:35 - line:27:35","decl":"Darwin.(file).sqrt","function_ref":"single","type":"(Double) -> Double","location":"<<testFilePath>>:27:35"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit","nothrow"],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:40 - line:27:40","decl":"Swift.(file).Double.init(_builtinIntegerLiteral:)","function_ref":"single","type":"(Double.Type) -> (Int2048) -> Double","location":"<<testFilePath>>:27:40"}},{"standaloneAttributes":["implicit"],"subTrees":[],"name":"Type Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:40 - line:27:40","type":"Double.Type","location":"<<testFilePath>>:27:40","typerepr":"Double"}}],"name":"Constructor Reference Call Expression","keyValueAttributes":{"type":"(Int2048) -> Double","range":"<<testFilePath>>:27:40 - line:27:40","location":"<<testFilePath>>:27:40"}},{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Integer Literal Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:40 - line:27:40","value":"9","type":"Int2048","location":"<<testFilePath>>:27:40"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:40 - line:27:40","names":"_builtinIntegerLiteral","type":"(_builtinIntegerLiteral: Int2048)","location":"<<testFilePath>>:27:40"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_builtinIntegerLiteral:","range":"<<testFilePath>>:27:40 - line:27:40","type":"Double","location":"<<testFilePath>>:27:40"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"(Double)","range":"<<testFilePath>>:27:39 - line:27:41","location":"<<testFilePath>>:27:40"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:27:35 - line:27:41","type":"Double","location":"<<testFilePath>>:27:35"}},{"standaloneAttributes":[],"subTrees":[],"name":"String Literal Expression","keyValueAttributes":{"location":"<<testFilePath>>:27:44","builtin_initializer":"Swift.(file).String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)","range":"<<testFilePath>>:27:44 - line:27:44","value":"Math.sqrt(9.0)","type":"String","initializer":"**NULL**","encoding":"utf8"}}],"name":"Tuple Expression","keyValueAttributes":{"range":"<<testFilePath>>:27:34 - line:27:60","names":"'',''","type":"(Double, String)","location":"<<testFilePath>>:27:34"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:_:","range":"<<testFilePath>>:27:18 - line:27:60","type":"Double","location":"<<testFilePath>>:27:18"}}],"name":"Pattern Binding Declaration","keyValueAttributes":{}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}},{"standaloneAttributes":["squareRoot","let"],"subTrees":[],"name":"Variable Declaration","keyValueAttributes":{"storage_kind":"stored","access":"internal","type":"Double","interface type":"Double"}},{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["nothrow"],"subTrees":[{"standaloneAttributes":[],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:28:1 - line:28:1","decl":"Swift.(file).print(_:separator:terminator:)","function_ref":"single","type":"(Any..., String, String) -> ()","location":"<<testFilePath>>:28:1"}},{"standaloneAttributes":["implicit","scalar_to_tuple"],"subTrees":[{"standaloneAttributes":[],"subTrees":[{"standaloneAttributes":["implicit"],"subTrees":[{"standaloneAttributes":["direct_to_storage"],"subTrees":[],"name":"Declaration Reference Expression","keyValueAttributes":{"range":"<<testFilePath>>:28:7 - line:28:7","decl":"kotlinLiterals.(file).squareRoot@<<testFilePath>>:27:5","function_ref":"unapplied","type":"Double","location":"<<testFilePath>>:28:7"}}],"name":"Erasure Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:28:7 - line:28:7","location":"<<testFilePath>>:28:7"}}],"name":"Parentheses Expression","keyValueAttributes":{"type":"Any","range":"<<testFilePath>>:28:6 - line:28:17","location":"<<testFilePath>>:28:7"}}],"name":"Tuple Shuffle Expression","keyValueAttributes":{"variadic_sources":"0","range":"<<testFilePath>>:28:6 - line:28:17","elements":"-2, -1, -1","default_args_owner":"Swift.(file).print(_:separator:terminator:)","location":"<<testFilePath>>:28:7","type":"(Any..., separator: String, terminator: String)"}}],"name":"Call Expression","keyValueAttributes":{"arg_labels":"_:","range":"<<testFilePath>>:28:1 - line:28:17","type":"()","location":"<<testFilePath>>:28:1"}}],"name":"Brace Statement","keyValueAttributes":{}}],"name":"Top Level Code Declaration","keyValueAttributes":{}}],"name":"Source File","keyValueAttributes":{}}